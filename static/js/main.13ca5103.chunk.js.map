{"version":3,"sources":["reportWebVitals.js","App.js","commons/axios/interceptor.js","commons/functions/loadImage.js","commons/constants.js","store/chart/ChartData.js","components/chart/ChampionKillChart.js","components/chart/GoldChart.js","components/chart/ImportanceFeaturesChart.js","components/chart/LevelChart.js","components/chart/SkillChart.js","components/chart/TowerKillChart.js","components/chart/WinPredictionChart.js","components/event/EventComponent.js","components/event/TimeLine.js","components/event/TeamFight.js","components/modal/GameVodPopup.js","components/profile/Footprints.js","components/profile/Stats.js","services/p1/P1.js","services/p2/P2.js","services/p3/P3.js","pages/p1/P1.js","pages/p2/P2.js","pages/p3/P3.js","pages/Test.js","Routes.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","App","_instance","axios","create","baseURL","process","timeout","interceptors","request","use","req","err","Promise","reject","response","res","console","info","JSON","parse","data","_axios","method","params","a","url","loadImage","alt","resolve","image","Image","addEventListener","src","BLUE_HEX_CODE","PURPLE_HEX_CODE","chartDataState","atom","key","default","winPredictionData","goldData","championKillData","blue","purple","towerKillData","levelData","skillData","importanceData","chartDataSelector","selector","set","newValue","getRecoilValue","get","setRecoilState","hour","Number","time_stamp","split","minute","second","dateTime","moment","add","chartData","blue_win_prediction","purple_win_prediction","valueOf","blue_total_gold","purple_total_gold","blue_total_champion_kill","purple_total_champion_kill","blue_total_tower_kill","purple_total_tower_kill","blue_level_top","blue_level_jungle","blue_level_middle","blue_level_bottom","blue_level_support","purple_level_top","purple_level_jungle","purple_level_middle","purple_level_bottom","purple_level_support","blue_skill_top","blue_skill_jungle","blue_skill_middle","blue_skill_bottom","blue_skill_support","purple_skill_top","purple_skill_jungle","purple_skill_middle","purple_skill_bottom","purple_skill_support","importance_features","ChampionKillChart","memo","useRecoilValue","options","chart","type","height","style","margin","width","title","text","credits","enabled","legend","yAxis","min","series","name","color","xAxis","categories","plotOptions","stacking","highcharts","Highcharts","GoldChart","layout","align","verticalAlign","itemStyle","fontSize","fontWeight","map","tickInterval","labels","formatter","dateFormat","this","value","tickWidth","lineWidth","tooltip","x","format","displayName","ImportanceFeaturesChart","floating","Object","keys","y","dataLabels","distance","connectorShape","crookDistance","pointFormat","pie","center","textOverflow","states","hover","halo","LevelChart","max","tickPositions","SkillChart","TowerKillChart","WinPredictionChart","backgroundColor","gridLineWidth","EventComponent","eventData","render","event_type","className","event_structure","buyer","item","killer","victim","assists","champion","index","TeamFight","TimeLine","eventList","onTimeLineClickCallback","useState","eventRefs","setEventRefs","eventLength","length","useEffect","Array","fill","_","i","createRef","forEach","event","current","classList","remove","onEventClick","useCallback","ref","onClick","canvas","useRef","ctx","getContext","all","imgs","img","drawImage","drawX","location","drawY","base64","toDataURL","hidden","GameVodPopup","onFileConfirmCallback","inputFile","fileName","setFileName","id","tabIndex","onChange","e","splitNm","target","defaultValue","htmlFor","colorSet","Set","Footprints","profiles","canvasRefs","setCanVasRefs","mapRefs","setMapRefs","profilesLength","profile","strokeStyle","from","footprints","footprint","posArray","push","pos","posIndex","beginPath","moveTo","lineTo","stroke","feature","feature_result","includes","toFixed","fillStyle","fillRect","font","fillText","chunkGroups","chunk","groups","ulIndex","group","liIndex","Stats","selectedGroup","scope","stats","Assist","CS","Death","Gold","Kill","LGA_1_1","param","LGA_1_2","LGA_1_3","IER_1_1","IER_1_2","IER_1_3","GPG_1_1","GPG_1_2","GPG_1_3","P1","captureArea","interval","setChartData","useSetRecoilState","videoSource","setVideoSource","play","setPlay","model","setModel","playEvent","endedEvent","getLGA_1_3","capture","setInterval","document","createElement","offsetWidth","offsetHeight","dataURL","getLGA_1_2","b64encoded","Math","floor","currentTime","_chartData","clearInterval","removeEventListener","selectFile","files","blob","URL","createObjectURL","getLGA_1_1","source","opA","opB","opC","onChangeModel","autoPlay","controls","muted","checked","P2","timeLineArea","setEventList","setEventData","getIER_1_3","getIER_1_2","_eventData","scrollTop","scrollHeight","getIER_1_1","maxHeight","P3","useForm","register","handleSubmit","setFocus","tierList","setTierList","groupList","setGroupList","setProfiles","slideData","setSlideData","sliderValue","setSliderValue","setSelectedGroup","sliderIndex","findIndex","time","getGPG_1_3","_footprintData","representativeFootprint","representative_footprint","_slideData","viewProfiles","filter","view","profileIndex","opacity","transformColor","onError","errors","field","alert","message","onPlayBoxClick","onSliderChange","sliderValueFormatter","onGroupChange","onChangeVersion","el","selected","getGPG_1_1","version","_tierList","tier","disabled","Slider","step","valueLabelDisplay","getAriaValueText","valueLabelFormat","IconButton","required","form","getGPG_1_2","_profileData","autoComplete","defaultChecked","Test","Routes","exact","path","to","component","ReactDOM","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.13ca5103.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","//import { Link } from \"react-router-dom\";\r\nimport \"./assets/css/style.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    // <div style={{ textAlign: \"-webkit-center\" }}>\r\n    //   <Link to=\"/\">Home</Link>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n    //   <Link to=\"/p1\">P1</Link>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n    //   <Link to=\"/p2\">P2</Link>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n    //   <Link to=\"/p3\">P3</Link>\r\n    // </div>\r\n    <></>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import axios from \"axios\";\r\n\r\nconst _instance = axios.create({ baseURL: process.env.REACT_APP_BASE_URL, timeout: 10000 });\r\n\r\n_instance.interceptors.request.use(\r\n  (req) => {\r\n    //console.info(req.method, req.url, req.data);\r\n    return req;\r\n  },\r\n  (err) => {\r\n    return Promise.reject(err);\r\n  }\r\n);\r\n\r\n_instance.interceptors.response.use(\r\n  (res) => {\r\n    console.info(JSON.parse(res.data));\r\n    return res;\r\n  },\r\n  (err) => {\r\n    return Promise.reject(err);\r\n  }\r\n);\r\n\r\nconst _axios = async (method, params, url = \"\") => {\r\n  return await _instance[method](url, params);\r\n};\r\n\r\nexport default _axios;\r\n","const loadImage = (url, alt = \"\") => {\r\n  return new Promise((resolve) => {\r\n    const image = new Image();\r\n    image.addEventListener(\"load\", () => {\r\n      resolve(image);\r\n    });\r\n    image.src = url;\r\n    image.alt = alt;\r\n  });\r\n};\r\n\r\nexport { loadImage };\r\n","export const BLUE_HEX_CODE = \"#2D76E5\";\r\nexport const PURPLE_HEX_CODE = \"#D630B6\";\r\n","import { atom, selector } from \"recoil\";\r\nimport moment from \"moment\";\r\n\r\nexport const chartDataState = atom({\r\n  key: \"chartDataState\",\r\n  default: {\r\n    winPredictionData: [],\r\n    goldData: [],\r\n    championKillData: { blue: 0, purple: 0 },\r\n    towerKillData: { blue: 0, purple: 0 },\r\n    levelData: { blue: [], purple: [] },\r\n    skillData: { blue: [], purple: [] },\r\n    importanceData: {},\r\n  },\r\n});\r\n\r\nexport const chartDataSelector = selector({\r\n  key: \"chartDataStateSelector\",\r\n  set: ({ get: getRecoilValue, set: setRecoilState }, newValue) => {\r\n    const hour = Number(newValue.time_stamp.split(\":\")[0]);\r\n    const minute = Number(newValue.time_stamp.split(\":\")[1]);\r\n    const second = Number(newValue.time_stamp.split(\":\")[2]);\r\n\r\n    const dateTime = moment(0);\r\n    dateTime.add(hour, \"hour\").add(minute, \"minute\").add(second, \"second\");\r\n\r\n    const chartData = {\r\n      winPredictionData: [...getRecoilValue(chartDataState).winPredictionData, { blue: newValue.blue_win_prediction, purple: newValue.purple_win_prediction, dateTime: dateTime.valueOf() }],\r\n      goldData: [...getRecoilValue(chartDataState).goldData, { blue: newValue.blue_total_gold, purple: newValue.purple_total_gold, dateTime: dateTime.valueOf() }],\r\n      championKillData: { blue: newValue.blue_total_champion_kill, purple: newValue.purple_total_champion_kill },\r\n      towerKillData: { blue: newValue.blue_total_tower_kill, purple: newValue.purple_total_tower_kill },\r\n      levelData: {\r\n        blue: [newValue.blue_level_top, newValue.blue_level_jungle, newValue.blue_level_middle, newValue.blue_level_bottom, newValue.blue_level_support],\r\n        purple: [newValue.purple_level_top, newValue.purple_level_jungle, newValue.purple_level_middle, newValue.purple_level_bottom, newValue.purple_level_support],\r\n      },\r\n      skillData: {\r\n        blue: [newValue.blue_skill_top, newValue.blue_skill_jungle, newValue.blue_skill_middle, newValue.blue_skill_bottom, newValue.blue_skill_support],\r\n        purple: [newValue.purple_skill_top, newValue.purple_skill_jungle, newValue.purple_skill_middle, newValue.purple_skill_bottom, newValue.purple_skill_support],\r\n      },\r\n      importanceData: newValue.importance_features,\r\n    };\r\n\r\n    setRecoilState(chartDataState, chartData);\r\n  },\r\n  get: ({ get }) => {\r\n    return get(chartDataState);\r\n  },\r\n});\r\n","import { memo } from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\n\r\nimport { BLUE_HEX_CODE, PURPLE_HEX_CODE } from \"../../commons\";\r\nimport { chartDataState } from \"../../store\";\r\n\r\nconst ChampionKillChart = memo(() => {\r\n  const chartData = useRecoilValue(chartDataState);\r\n  const options = {\r\n    chart: {\r\n      type: \"bar\",\r\n      height: 160,\r\n      style: {\r\n        margin: \"0 auto\",\r\n        width: \"100%\",\r\n      },\r\n    },\r\n    title: {\r\n      text: \"\",\r\n    },\r\n    credits: {\r\n      enabled: false,\r\n    },\r\n    legend: {\r\n      enabled: false,\r\n    },\r\n    yAxis: {\r\n      min: 0,\r\n      title: {\r\n        text: \"\",\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Blue\",\r\n        color: BLUE_HEX_CODE,\r\n        data: [chartData.championKillData.blue, 0],\r\n      },\r\n      {\r\n        name: \"Purple\",\r\n        color: PURPLE_HEX_CODE,\r\n        data: [0, chartData.championKillData.purple],\r\n      },\r\n    ],\r\n    xAxis: {\r\n      categories: [\"Blue\", \"Purple\"],\r\n    },\r\n    plotOptions: {\r\n      series: {\r\n        stacking: \"normal\",\r\n      },\r\n    },\r\n  };\r\n  return <HighchartsReact highcharts={Highcharts} options={options} />;\r\n});\r\n\r\nexport { ChampionKillChart };\r\n","import { memo } from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport moment from \"moment\";\r\n\r\nimport { BLUE_HEX_CODE, PURPLE_HEX_CODE } from \"../../commons\";\r\nimport { chartDataState } from \"../../store\";\r\n\r\nconst GoldChart = memo(() => {\r\n  const chartData = useRecoilValue(chartDataState).goldData;\r\n  const options = {\r\n    chart: {\r\n      type: \"line\",\r\n      style: {\r\n        margin: \"0 auto\",\r\n        width: \"100%\",\r\n      },\r\n    },\r\n    title: {\r\n      text: \"\",\r\n    },\r\n    credits: {\r\n      enabled: false,\r\n    },\r\n    legend: {\r\n      layout: \"horizontal\",\r\n      align: \"right\",\r\n      verticalAlign: \"bottom\",\r\n      itemStyle: {\r\n        fontSize: \"12px\",\r\n        fontWeight: 500,\r\n      },\r\n    },\r\n    yAxis: {\r\n      min: 0,\r\n      title: {\r\n        text: \"\",\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Blue\",\r\n        color: BLUE_HEX_CODE,\r\n        data: chartData.map((data) => {\r\n          return [data.dateTime, data.blue];\r\n        }),\r\n      },\r\n      {\r\n        name: \"Purple\",\r\n        color: PURPLE_HEX_CODE,\r\n        data: chartData.map((data) => {\r\n          return [data.dateTime, data.purple];\r\n        }),\r\n      },\r\n    ],\r\n    xAxis: {\r\n      type: \"dateTime\",\r\n      min: moment(0).valueOf(),\r\n      // max: moment(0).add(15, \"minute\").valueOf(),\r\n      tickInterval: moment(0).add(5, \"minute\").valueOf(),\r\n      labels: {\r\n        formatter: function () {\r\n          return Highcharts.dateFormat(\"%M:%S\", this.value);\r\n        },\r\n      },\r\n      tickWidth: 0,\r\n      lineWidth: 0,\r\n    },\r\n    tooltip: {\r\n      formatter: function () {\r\n        return moment(this.x).format(\"mm:ss\");\r\n      },\r\n    },\r\n  };\r\n  return <HighchartsReact displayName=\"center-align-chart\" highcharts={Highcharts} options={options} />;\r\n});\r\n\r\nexport { GoldChart };\r\n","import { memo } from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\n\r\nimport { chartDataState } from \"../../store\";\r\n\r\nconst ImportanceFeaturesChart = memo(() => {\r\n  const chartData = useRecoilValue(chartDataState).importanceData;\r\n  const options = {\r\n    chart: {\r\n      type: \"pie\",\r\n      height: 150,\r\n      style: {\r\n        width: \"100%\",\r\n      },\r\n    },\r\n    title: {\r\n      text: \"Importance<br />features\",\r\n      align: \"left\",\r\n      floating: true,\r\n      style: {\r\n        fontSize: \"15px\",\r\n        fontWeight: 300,\r\n      },\r\n    },\r\n    credits: {\r\n      enabled: false,\r\n    },\r\n    series: [\r\n      {\r\n        data: Object.keys(chartData).map((key) => {\r\n          return {\r\n            name: key,\r\n            y: chartData[key],\r\n            dataLabels: {\r\n              distance: 10,\r\n              connectorShape: \"crookedLine\",\r\n              crookDistance: \"90%\",\r\n            },\r\n          };\r\n        }),\r\n      },\r\n    ],\r\n    tooltip: {\r\n      pointFormat: \"{point.percentage:.1f}%</b>\",\r\n    },\r\n    plotOptions: {\r\n      pie: {\r\n        center: [190, 55],\r\n        dataLabels: {\r\n          enabled: true,\r\n          style: {\r\n            textOverflow: \"clip\",\r\n            fontSize: \"11px\",\r\n            fontWeight: 500,\r\n          },\r\n        },\r\n      },\r\n      series: {\r\n        states: {\r\n          hover: {\r\n            halo: null,\r\n          },\r\n        },\r\n      },\r\n    },\r\n  };\r\n  return <HighchartsReact highcharts={Highcharts} options={options} />;\r\n});\r\n\r\nexport { ImportanceFeaturesChart };\r\n","import { memo } from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\n\r\nimport { BLUE_HEX_CODE, PURPLE_HEX_CODE } from \"../../commons\";\r\nimport { chartDataState } from \"../../store\";\r\n\r\nconst LevelChart = memo(() => {\r\n  const chartData = useRecoilValue(chartDataState).levelData;\r\n  const options = {\r\n    chart: {\r\n      type: \"column\",\r\n      height: 90,\r\n      style: {\r\n        margin: \"0 auto\",\r\n        width: \"100%\",\r\n      },\r\n    },\r\n    title: {\r\n      text: \"\",\r\n    },\r\n    credits: {\r\n      enabled: false,\r\n    },\r\n    legend: {\r\n      enabled: false,\r\n    },\r\n    yAxis: {\r\n      min: 0,\r\n      max: 20,\r\n      title: {\r\n        text: \"\",\r\n      },\r\n      tickPositions: [0, 5, 10, 15, 20],\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Blue\",\r\n        color: BLUE_HEX_CODE,\r\n        data: [...chartData.blue],\r\n      },\r\n      {\r\n        name: \"Purple\",\r\n        color: PURPLE_HEX_CODE,\r\n        data: [...chartData.purple],\r\n      },\r\n    ],\r\n    xAxis: {\r\n      categories: [\"Top\", \"Jungle\", \"Middle\", \"Bottom\", \"Support\"],\r\n    },\r\n  };\r\n  return <HighchartsReact highcharts={Highcharts} options={options} />;\r\n});\r\n\r\nexport { LevelChart };\r\n","import { memo } from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\n\r\nimport { BLUE_HEX_CODE, PURPLE_HEX_CODE } from \"../../commons\";\r\nimport { chartDataState } from \"../../store\";\r\n\r\nconst SkillChart = memo(() => {\r\n  const chartData = useRecoilValue(chartDataState).skillData;\r\n  const options = {\r\n    chart: {\r\n      type: \"column\",\r\n      height: 90,\r\n      style: {\r\n        margin: \"0 auto\",\r\n        width: \"100%\",\r\n      },\r\n    },\r\n    title: {\r\n      text: \"\",\r\n    },\r\n    credits: {\r\n      enabled: false,\r\n    },\r\n    legend: {\r\n      enabled: false,\r\n    },\r\n    yAxis: {\r\n      min: 0,\r\n      title: {\r\n        text: \"\",\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Blue\",\r\n        color: BLUE_HEX_CODE,\r\n        data: [...chartData.blue],\r\n      },\r\n      {\r\n        name: \"Purple\",\r\n        color: PURPLE_HEX_CODE,\r\n        data: [...chartData.purple],\r\n      },\r\n    ],\r\n    xAxis: {\r\n      categories: [\"Top\", \"Jungle\", \"Middle\", \"Bottom\", \"Support\"],\r\n    },\r\n  };\r\n  return <HighchartsReact highcharts={Highcharts} options={options} />;\r\n});\r\n\r\nexport { SkillChart };\r\n","import { memo } from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\n\r\nimport { BLUE_HEX_CODE, PURPLE_HEX_CODE } from \"../../commons\";\r\nimport { chartDataState } from \"../../store\";\r\n\r\nconst TowerKillChart = memo(() => {\r\n  const chartData = useRecoilValue(chartDataState).towerKillData;\r\n  const options = {\r\n    chart: {\r\n      type: \"bar\",\r\n      height: 160,\r\n      style: {\r\n        margin: \"0 auto\",\r\n        width: \"100%\",\r\n      },\r\n    },\r\n    title: {\r\n      text: \"\",\r\n    },\r\n    credits: {\r\n      enabled: false,\r\n    },\r\n    legend: {\r\n      enabled: false,\r\n    },\r\n    yAxis: {\r\n      min: 0,\r\n      title: {\r\n        text: \"\",\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Blue\",\r\n        color: BLUE_HEX_CODE,\r\n        data: [chartData.blue, 0],\r\n      },\r\n      {\r\n        name: \"Purple\",\r\n        color: PURPLE_HEX_CODE,\r\n        data: [0, chartData.purple],\r\n      },\r\n    ],\r\n    xAxis: {\r\n      categories: [\"Blue\", \"Purple\"],\r\n    },\r\n    plotOptions: {\r\n      series: {\r\n        stacking: \"normal\",\r\n      },\r\n    },\r\n  };\r\n  return <HighchartsReact highcharts={Highcharts} options={options} />;\r\n});\r\n\r\nexport { TowerKillChart };\r\n","import { memo } from \"react\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport moment from \"moment\";\r\n\r\nimport { BLUE_HEX_CODE, PURPLE_HEX_CODE } from \"../../commons\";\r\nimport { chartDataState } from \"../../store\";\r\n\r\n//실시간 게임 결과 예측\r\nconst WinPredictionChart = memo(() => {\r\n  const chartData = useRecoilValue(chartDataState).winPredictionData;\r\n  const options = {\r\n    chart: {\r\n      type: \"line\",\r\n      height: 370,\r\n      backgroundColor: null,\r\n      style: {\r\n        width: \"100%\",\r\n      },\r\n    },\r\n    title: {\r\n      text: \"\",\r\n    },\r\n    credits: {\r\n      enabled: false,\r\n    },\r\n    legend: {\r\n      layout: \"horizontal\",\r\n      align: \"right\",\r\n      verticalAlign: \"bottom\",\r\n      itemStyle: {\r\n        color: \"#B8B8B8\",\r\n        fontSize: \"14px\",\r\n        fontWeight: 600,\r\n      },\r\n    },\r\n    yAxis: {\r\n      min: 0,\r\n      max: 100,\r\n      title: {\r\n        text: \"\",\r\n      },\r\n      tickPositions: [0, 25, 50, 75, 100],\r\n      labels: {\r\n        style: {\r\n          color: \"#B8B8B8\",\r\n        },\r\n      },\r\n      gridLineWidth: 0.5,\r\n    },\r\n    series: [\r\n      {\r\n        name: \"Blue\",\r\n        color: BLUE_HEX_CODE,\r\n        data: chartData.map((data) => {\r\n          return [data.dateTime, data.blue];\r\n        }),\r\n      },\r\n      {\r\n        name: \"Purple\",\r\n        color: PURPLE_HEX_CODE,\r\n        data: chartData.map((data) => {\r\n          return [data.dateTime, data.purple];\r\n        }),\r\n      },\r\n    ],\r\n    xAxis: {\r\n      type: \"dateTime\",\r\n      min: moment(0).valueOf(),\r\n      // max: moment(0).add(15, \"minute\").valueOf(),\r\n      tickInterval: moment(0).add(5, \"minute\").valueOf(),\r\n      labels: {\r\n        formatter: function () {\r\n          return Highcharts.dateFormat(\"%M:%S\", this.value);\r\n        },\r\n        style: {\r\n          color: \"#B8B8B8\",\r\n        },\r\n      },\r\n      gridLineWidth: 0.5,\r\n      tickWidth: 0,\r\n      lineWidth: 0,\r\n    },\r\n    tooltip: {\r\n      formatter: function () {\r\n        return moment(this.x).format(\"mm:ss\");\r\n      },\r\n    },\r\n  };\r\n  return <HighchartsReact highcharts={Highcharts} options={options} />;\r\n});\r\n\r\nexport { WinPredictionChart };\r\n","import { memo, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { TeamFight } from \"../\";\r\n\r\nconst EventComponent = memo(({ eventData }) => {\r\n  let render = <></>;\r\n\r\n  if (eventData) {\r\n    switch (eventData.event_type) {\r\n      case \"buy_item\":\r\n        render = (\r\n          <div className=\"detailBox p-3\">\r\n            <p>\r\n              <span className=\"time\">{eventData.time_stamp}</span> <span className=\"desc\">Buy Item</span>\r\n            </p>\r\n            <div className=\"itemList\">\r\n              <div className=\"buyChamp teamBlue\">\r\n                <h5 className=\"posTitle\">구매 챔피언</h5>\r\n                <img src={`img/champion/${eventData.event_structure.buyer}.png`} style={{ width: \"120px\" }} alt={eventData.event_structure.buyer} />\r\n              </div>\r\n              <div className=\"itemG teamPurple\">\r\n                <h5 className=\"posTitle\">아이템</h5>\r\n                <img src={`img/item/${eventData.event_structure.item}.png`} style={{ width: \"120px\" }} alt={eventData.event_structure.item} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n        break;\r\n      case \"kill_building\":\r\n        render = (\r\n          <div className=\"detailBox p-3\">\r\n            <p>\r\n              <span className=\"time\">{eventData.time_stamp}</span> <span className=\"desc\">Kill Building</span>\r\n            </p>\r\n            <div className=\"teamList\">\r\n              <div className=\"champLeader\">\r\n                <div className=\"leader1 teamBlue\">\r\n                  <h5 className=\"posTitle\">챔피언</h5>\r\n                  <img src={`img/champion/${eventData.event_structure.killer}.png`} style={{ width: \"120px\" }} alt={eventData.killer} />\r\n                </div>\r\n                <div className=\"leader2 teamPurple\">\r\n                  <h5 className=\"posTitle\">포탑</h5>\r\n                  <img src={`img/tower/${eventData.event_structure.victim}.png`} style={{ width: \"120px\" }} alt={eventData.victim} />\r\n                </div>\r\n              </div>\r\n              <div className=\"assistList mt-5\">\r\n                <h5 className=\"posTitle\">어이스트 챔피언</h5>\r\n                <ul>\r\n                  {eventData &&\r\n                    eventData.event_structure.assists.map((champion, index) => {\r\n                      return (\r\n                        <li key={index}>\r\n                          <img src={`img/champion/${champion}.png`} style={{ width: \"120px\" }} alt={champion} />\r\n                        </li>\r\n                      );\r\n                    })}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n        break;\r\n      case \"kill_champion\":\r\n        render = (\r\n          <div className=\"detailBox p-3\">\r\n            <p>\r\n              <span className=\"time\">{eventData.time_stamp}</span> <span className=\"desc\">Kill Champion</span>\r\n            </p>\r\n            <div className=\"teamList\">\r\n              <div className=\"champLeader\">\r\n                <div className=\"leader1 teamBlue\">\r\n                  <h5 className=\"posTitle\">킬 챔피언</h5>\r\n                  <img src={`img/champion/${eventData.event_structure.killer}.png`} style={{ width: \"120px\" }} alt={eventData.killer} />\r\n                </div>\r\n                <div className=\"leader2 teamPurple\">\r\n                  <h5 className=\"posTitle\">데스 챔피언</h5>\r\n                  <img src={`img/champion/${eventData.event_structure.victim}.png`} style={{ width: \"120px\" }} alt={eventData.victim} />\r\n                </div>\r\n              </div>\r\n              <div className=\"assistList mt-5\">\r\n                <h5 className=\"posTitle\">어이스트 챔피언</h5>\r\n                <ul>\r\n                  {eventData &&\r\n                    eventData.event_structure.assists.map((champion, index) => {\r\n                      return (\r\n                        <li key={index}>\r\n                          <img src={`img/champion/${champion}.png`} style={{ width: \"120px\" }} alt={champion} />\r\n                        </li>\r\n                      );\r\n                    })}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n        break;\r\n      case \"kill_object\":\r\n        render = (\r\n          <div className=\"detailBox p-3\">\r\n            <p>\r\n              <span className=\"time\">{eventData.time_stamp}</span> <span className=\"desc\">Kill Object</span>\r\n            </p>\r\n            <div className=\"teamList\">\r\n              <div className=\"champLeader\">\r\n                <div className=\"leader1 teamBlue\">\r\n                  <h5 className=\"posTitle\">챔피언</h5>\r\n                  <img src={`img/champion/${eventData.event_structure.killer}.png`} style={{ width: \"120px\" }} alt={eventData.killer} />\r\n                </div>\r\n                <div className=\"leader2 teamPurple\">\r\n                  <h5 className=\"posTitle\">오브젝트</h5>\r\n                  <img src={`img/object/${eventData.event_structure.victim}.png`} style={{ width: \"120px\" }} alt={eventData.victim} />\r\n                </div>\r\n              </div>\r\n              <div className=\"assistList mt-5\">\r\n                <h5 className=\"posTitle\">어이스트 챔피언</h5>\r\n                <ul>\r\n                  {eventData &&\r\n                    eventData.event_structure.assists.map((champion, index) => {\r\n                      return (\r\n                        <li key={index}>\r\n                          <img src={`img/champion/${champion}.png`} style={{ width: \"120px\" }} alt={champion} />\r\n                        </li>\r\n                      );\r\n                    })}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n        break;\r\n      case \"team_fight\":\r\n        render = <TeamFight eventData={eventData} />;\r\n        break;\r\n      default:\r\n        render = <></>;\r\n        break;\r\n    }\r\n  }\r\n  return <Fragment>{render}</Fragment>;\r\n});\r\n\r\nEventComponent.propTypes = {\r\n  eventData: PropTypes.object.isRequired,\r\n};\r\n\r\nexport { EventComponent };\r\n","import { memo, useState, useEffect, useCallback, createRef, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TimeLine = memo(({ eventList, onTimeLineClickCallback }) => {\r\n  const [eventRefs, setEventRefs] = useState([]);\r\n  const eventLength = eventList.length;\r\n\r\n  useEffect(() => {\r\n    setEventRefs((eventRefs) =>\r\n      Array(eventLength)\r\n        .fill()\r\n        .map((_, i) => eventRefs[i] || createRef())\r\n    );\r\n  }, [eventLength]);\r\n\r\n  useEffect(() => {\r\n    if (eventRefs.length > 0) {\r\n      eventRefs.forEach((event) => {\r\n        event.current.classList.remove(\"on\");\r\n      });\r\n\r\n      eventRefs[eventRefs.length - 1].current.classList.add(\"on\");\r\n      onTimeLineClickCallback(eventList[eventRefs.length - 1]);\r\n    }\r\n  }, [eventRefs, eventList, onTimeLineClickCallback]);\r\n\r\n  const onEventClick = useCallback(\r\n    (ref) => {\r\n      eventRefs.forEach((event) => {\r\n        event.current.classList.remove(\"on\");\r\n      });\r\n      ref.current.classList.add(\"on\");\r\n    },\r\n    [eventRefs]\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      {eventList.map((data, index) => {\r\n        switch (data.event_type) {\r\n          case \"buy_item\":\r\n            return (\r\n              <li className=\"event\" data-date={data.time_stamp} key={index}>\r\n                <button\r\n                  ref={eventRefs[index]}\r\n                  type=\"button\"\r\n                  className=\"btn btn_sky\"\r\n                  onClick={() => {\r\n                    onTimeLineClickCallback(data);\r\n                    onEventClick(eventRefs[index]);\r\n                  }}\r\n                >\r\n                  Buy Item\r\n                </button>\r\n              </li>\r\n            );\r\n          case \"kill_building\":\r\n            return (\r\n              <li className=\"event\" data-date={data.time_stamp} key={index}>\r\n                <button\r\n                  ref={eventRefs[index]}\r\n                  type=\"button\"\r\n                  className=\"btn btn_sky\"\r\n                  onClick={() => {\r\n                    onTimeLineClickCallback(data);\r\n                    onEventClick(eventRefs[index]);\r\n                  }}\r\n                >\r\n                  Kill Building\r\n                </button>\r\n              </li>\r\n            );\r\n          case \"kill_champion\":\r\n            return (\r\n              <li className=\"event\" data-date={data.time_stamp} key={index}>\r\n                <button\r\n                  ref={eventRefs[index]}\r\n                  type=\"button\"\r\n                  className=\"btn btn_sky\"\r\n                  onClick={() => {\r\n                    onTimeLineClickCallback(data);\r\n                    onEventClick(eventRefs[index]);\r\n                  }}\r\n                >\r\n                  Kill Champion\r\n                </button>\r\n              </li>\r\n            );\r\n          case \"kill_object\":\r\n            return (\r\n              <li className=\"event\" data-date={data.time_stamp} key={index}>\r\n                <button\r\n                  ref={eventRefs[index]}\r\n                  type=\"button\"\r\n                  className=\"btn btn_sky\"\r\n                  onClick={() => {\r\n                    onTimeLineClickCallback(data);\r\n                    onEventClick(eventRefs[index]);\r\n                  }}\r\n                >\r\n                  Kill Object\r\n                </button>\r\n              </li>\r\n            );\r\n          case \"team_fight\":\r\n            return (\r\n              <li className=\"event\" data-date={data.time_stamp} key={index}>\r\n                <button\r\n                  ref={eventRefs[index]}\r\n                  type=\"button\"\r\n                  className=\"btn btn_sky\"\r\n                  onClick={() => {\r\n                    onTimeLineClickCallback(data);\r\n                    onEventClick(eventRefs[index]);\r\n                  }}\r\n                >\r\n                  Team Fight\r\n                </button>\r\n              </li>\r\n            );\r\n          default:\r\n            return <li ref={eventRefs[index]} key={index}></li>;\r\n        }\r\n      })}\r\n    </Fragment>\r\n  );\r\n});\r\n\r\nTimeLine.propTypes = {\r\n  eventList: PropTypes.array.isRequired,\r\n  onTimeLineClickCallback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport { TimeLine };\r\n","import { memo, Fragment, useRef, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { loadImage } from \"../../commons\";\r\n\r\nconst TeamFight = memo(({ eventData }) => {\r\n  const canvas = useRef();\r\n  const map = useRef();\r\n\r\n  useEffect(() => {\r\n    if (eventData.event_structure) {\r\n      const ctx = canvas.current.getContext(\"2d\");\r\n\r\n      Promise.all([loadImage(\"img/map/map11.png\", \"map\"), loadImage(\"img/map/fightCircle.png\", \"fight\")]).then((imgs) => {\r\n        imgs.forEach((img) => {\r\n          if (img.alt === \"map\") {\r\n            ctx.drawImage(img, 0, 0);\r\n          } else if (img.alt === \"fight\") {\r\n            const width = ctx.canvas.width;\r\n            const height = ctx.canvas.height;\r\n            const xPos = eventData.event_structure.location[0];\r\n            const yPos = eventData.event_structure.location[1];\r\n\r\n            //fightcircle 중심좌표 90,105 이미지 크기 179,179 (이미지 크기 - 중심좌표)\r\n            const drawX = width * xPos - 90;\r\n            const drawY = height * yPos + 105;\r\n\r\n            ctx.drawImage(img, drawX, height - drawY);\r\n          }\r\n        });\r\n\r\n        const base64 = canvas.current.toDataURL();\r\n        map.current.src = base64;\r\n      });\r\n    }\r\n  }, [eventData]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"detailBox p-3\">\r\n        <p>\r\n          <span className=\"time\">{eventData.time_stamp}</span> <span className=\"desc\">Team Fight</span>\r\n        </p>\r\n        <div className=\"miniMap\">\r\n          <img ref={map} src=\"img/map/map11.png\" alt=\"map\" />\r\n          <canvas ref={canvas} width=\"512\" height=\"512\" hidden />\r\n        </div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n});\r\n\r\nTeamFight.propTypes = {\r\n  eventData: PropTypes.object.isRequired,\r\n};\r\n\r\nexport { TeamFight };\r\n","import { memo, useState, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst GameVodPopup = memo(({ onFileConfirmCallback }) => {\r\n  const inputFile = useRef();\r\n  const [fileName, setFileName] = useState(\"\");\r\n\r\n  const onFileChange = (e) => {\r\n    const inputFile = e.target.value;\r\n    const splitNm = inputFile.split(\"\\\\\");\r\n    setFileName(splitNm[splitNm.length - 1]);\r\n  };\r\n\r\n  const onModalConfirm = () => {\r\n    onFileConfirmCallback(inputFile.current);\r\n  };\r\n\r\n  return (\r\n    <div className=\"modal fade\" id=\"gameVodPop\" tabIndex=\"-1\" aria-labelledby=\"ModalLabel\" aria-hidden=\"true\">\r\n      <div className=\"modal-dialog modal-dialog-centered\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\" id=\"ModalLabel\">\r\n              게임영상 선택\r\n            </h5>\r\n            <button type=\"button\" className=\"btn-close btn-close-white\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <div className=\"fileBox\">\r\n              <label className=\"file-label\">게임영상</label>\r\n              <input type=\"file\" id=\"fileUpload\" onChange={onFileChange} ref={inputFile} hidden />\r\n              <input type=\"text\" className=\"fileNmBox\" defaultValue={fileName} />\r\n              <label htmlFor=\"fileUpload\" className=\"btn-file\">\r\n                파일찾기\r\n              </label>\r\n            </div>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button type=\"button\" className=\"btn btn_gray\" onClick={onModalConfirm} data-bs-dismiss=\"modal\" aria-label=\"Close\">\r\n              확인\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nGameVodPopup.propTypes = {\r\n  onFileConfirmCallback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport { GameVodPopup };\r\n","import { Fragment, useState, useEffect, createRef, memo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { default as _ } from \"lodash\";\r\n\r\nimport { loadImage } from \"../../commons\";\r\n\r\nconst colorSet = new Set([\"rgb(30, 81 ,230, 0.6)\", \"rgb(255, 35, 28, 0.6)\", \"rgb(40, 230, 75, 0.6)\"]);\r\n\r\nconst Footprints = memo(({ profiles }) => {\r\n  const [canvasRefs, setCanVasRefs] = useState([]);\r\n  const [mapRefs, setMapRefs] = useState([]);\r\n  const profilesLength = profiles.length;\r\n\r\n  useEffect(() => {\r\n    setCanVasRefs((canvasRefs) =>\r\n      Array(profilesLength)\r\n        .fill()\r\n        .map((_, i) => canvasRefs[i] || createRef())\r\n    );\r\n    setMapRefs((mapRefs) =>\r\n      Array(profilesLength)\r\n        .fill()\r\n        .map((_, i) => mapRefs[i] || createRef())\r\n    );\r\n  }, [profilesLength]);\r\n\r\n  useEffect(() => {\r\n    if (mapRefs.length > 0) {\r\n      mapRefs.forEach((map, index) => {\r\n        loadImage(\"img/map/map11.png\").then((img) => {\r\n          const profile = profiles[index];\r\n          const ctx = canvasRefs[index].current.getContext(\"2d\");\r\n          ctx.drawImage(img, 0, 0);\r\n          ctx.strokeStyle = Array.from(colorSet)[index % 3];\r\n          ctx.lineWidth = 5;\r\n\r\n          profile.footprints.forEach((footprint) => {\r\n            const posArray = [{ x: 20, y: 490 }];\r\n\r\n            Object.keys(footprint).forEach((key) => {\r\n              const width = 512;\r\n              const height = 512;\r\n              const xPos = footprint[key][0];\r\n              const yPos = footprint[key][1];\r\n\r\n              const drawX = width * xPos;\r\n              const drawY = height - height * yPos;\r\n\r\n              posArray.push({ x: drawX, y: drawY });\r\n            });\r\n\r\n            posArray.forEach((pos, posIndex) => {\r\n              if (posIndex > 0) {\r\n                ctx.beginPath();\r\n                ctx.moveTo(posArray[posIndex - 1].x, posArray[posIndex - 1].y);\r\n                ctx.lineTo(pos.x, pos.y);\r\n\r\n                ctx.stroke();\r\n              }\r\n            });\r\n          });\r\n\r\n          const isKDA = profile.feature_result.includes(\"/\");\r\n          const feature = isKDA ? profile.feature_result : Number(profile.feature_result).toFixed(2);\r\n          const width = feature.length * 29; //rect 넓이 자동 계산\r\n\r\n          ctx.fillStyle = \"#2d76e5\";\r\n          ctx.fillRect(512 - width, 450, width, 65); //x, y, width, height\r\n\r\n          ctx.font = \"bold 45px serif\";\r\n          ctx.fillStyle = \"#FFFFFF\";\r\n\r\n          ctx.fillText(feature, 512 - width + width / 12, 497); //이미지 크기인 512에서 rect넓이에 따라 text위치 지정\r\n\r\n          const base64 = canvasRefs[index].current.toDataURL();\r\n          map.current.src = base64;\r\n        });\r\n      });\r\n    }\r\n  }, [profiles, mapRefs, canvasRefs]);\r\n\r\n  const chunkGroups = _.chunk(profiles, 3);\r\n\r\n  return (\r\n    <Fragment>\r\n      {chunkGroups.map((groups, ulIndex) => {\r\n        return (\r\n          <ul key={ulIndex}>\r\n            {groups.map((group, liIndex) => {\r\n              return (\r\n                <li key={liIndex}>\r\n                  <p>Group {group.name}</p>\r\n                  <div className=\"mapBox\">\r\n                    <img ref={mapRefs[liIndex + ulIndex * 3]} src=\"img/map/map11.png\" alt=\"map\" />\r\n                    <canvas ref={canvasRefs[liIndex + ulIndex * 3]} width=\"512\" height=\"512\" hidden />\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        );\r\n      })}\r\n    </Fragment>\r\n  );\r\n});\r\n\r\nFootprints.propTypes = {\r\n  profiles: PropTypes.array.isRequired,\r\n};\r\n\r\nexport { Footprints };\r\n","import { Fragment, memo } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Stats = memo(({ profiles, selectedGroup }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"mapData mt-3 scrollBar\">\r\n        <table className=\"table table-hover\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">Group</th>\r\n              <th scope=\"col\">Assist</th>\r\n              <th scope=\"col\">CS</th>\r\n              <th scope=\"col\">Death</th>\r\n              <th scope=\"col\">Gold</th>\r\n              <th scope=\"col\">Kill</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {profiles.map((profile, index) => {\r\n              return (\r\n                <tr style={{ color: profile.name === selectedGroup ? \"red\" : \"\" }} key={index}>\r\n                  <th scope=\"row\">{profile.name}</th>\r\n                  <td>{profile.stats.Assist.toFixed(1)}</td>\r\n                  <td>{profile.stats.CS.toFixed(1)}</td>\r\n                  <td>{profile.stats.Death.toFixed(1)}</td>\r\n                  <td>{profile.stats.Gold.toFixed(1)}</td>\r\n                  <td>{profile.stats.Kill.toFixed(1)}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n});\r\n\r\nStats.propTypes = {\r\n  profiles: PropTypes.array.isRequired,\r\n  selectedGroup: PropTypes.string.isRequired,\r\n};\r\n\r\nexport { Stats };\r\n","import { axios } from \"../../commons\";\r\n\r\nconst LGA_1_1 = async (params) => {\r\n  return await axios(\"post\", { method: \"LGA_1_1\", param: params }).then((res) => {\r\n    return JSON.parse(res.data);\r\n  });\r\n};\r\n\r\nconst LGA_1_2 = async (params) => {\r\n  return await axios(\"post\", { method: \"LGA_1_2\", param: params }).then((res) => {\r\n    return JSON.parse(res.data);\r\n  });\r\n};\r\n\r\nconst LGA_1_3 = async (params) => {\r\n  return await axios(\"post\", { method: \"LGA_1_3\", param: params }).then((res) => {\r\n    return JSON.parse(res.data);\r\n  });\r\n};\r\n\r\nexport { LGA_1_1, LGA_1_2, LGA_1_3 };\r\n","import { axios } from \"../../commons\";\r\n\r\nconst IER_1_1 = async (params) => {\r\n  return await axios(\"post\", { method: \"IER_1_1\", param: params }).then((res) => {\r\n    return JSON.parse(res.data);\r\n  });\r\n};\r\n\r\nconst IER_1_2 = async (params) => {\r\n  return await axios(\"post\", { method: \"IER_1_2\", param: params }).then((res) => {\r\n    return JSON.parse(res.data);\r\n  });\r\n};\r\n\r\nconst IER_1_3 = async (params) => {\r\n  return await axios(\"post\", { method: \"IER_1_3\", param: params }).then((res) => {\r\n    return JSON.parse(res.data);\r\n  });\r\n};\r\n\r\nexport { IER_1_1, IER_1_2, IER_1_3 };\r\n","import { axios } from \"../../commons\";\r\n\r\nconst GPG_1_1 = async (params) => {\r\n  return await axios(\"post\", { method: \"GPG_1_1\", param: params }).then((res) => {\r\n    return JSON.parse(res.data);\r\n  });\r\n};\r\n\r\nconst GPG_1_2 = async (params) => {\r\n  return await axios(\"post\", { method: \"GPG_1_2\", param: params }).then((res) => {\r\n    return JSON.parse(res.data);\r\n  });\r\n};\r\n\r\nconst GPG_1_3 = async (params) => {\r\n  return await axios(\"post\", { method: \"GPG_1_3\", param: params }).then((res) => {\r\n    return JSON.parse(res.data);\r\n  });\r\n};\r\n\r\nexport { GPG_1_1, GPG_1_2, GPG_1_3 };\r\n","import { useRef, useEffect, useState, useCallback, Fragment } from \"react\";\r\nimport { useSetRecoilState } from \"recoil\";\r\n\r\nimport { ChampionKillChart, GoldChart, LevelChart, SkillChart, TowerKillChart, WinPredictionChart, GameVodPopup, ImportanceFeaturesChart } from \"../../components\";\r\nimport { chartDataSelector } from \"../../store\";\r\nimport { LGA_1_1, LGA_1_2, LGA_1_3 } from \"../../services\";\r\n\r\nconst P1 = () => {\r\n  const captureArea = useRef();\r\n  const interval = useRef();\r\n  const setChartData = useSetRecoilState(chartDataSelector);\r\n  const [videoSource, setVideoSource] = useState({ src: null, type: \"\" });\r\n  const [play, setPlay] = useState(false);\r\n  const [model, setModel] = useState(\"Random Forest\");\r\n\r\n  const playEvent = useCallback(\r\n    (e) => {\r\n      if (e.type === \"play\") {\r\n        setPlay(true);\r\n      } else if (e.type === \"pause\") {\r\n        setPlay(false);\r\n      }\r\n    },\r\n    [setPlay]\r\n  );\r\n\r\n  const endedEvent = useCallback(() => {\r\n    const getLGA_1_3 = async () => {\r\n      await LGA_1_3({});\r\n    };\r\n    getLGA_1_3();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const capture = captureArea.current;\r\n    capture.addEventListener(\"play\", playEvent, false);\r\n    capture.addEventListener(\"pause\", playEvent, false);\r\n    capture.addEventListener(\"ended\", endedEvent, false);\r\n\r\n    interval.current = setInterval(() => {\r\n      const canvas = document.createElement(\"canvas\");\r\n      canvas.width = capture.offsetWidth * 2;\r\n      canvas.height = capture.offsetHeight * 2;\r\n\r\n      const ctx = canvas.getContext(\"2d\");\r\n      ctx.drawImage(capture, 0, 0, canvas.width, canvas.height);\r\n\r\n      const dataURL = canvas.toDataURL();\r\n      canvas.remove();\r\n\r\n      if (play) {\r\n        const getLGA_1_2 = async () => {\r\n          const params = {\r\n            b64encoded: dataURL,\r\n            index: Math.floor(capture.currentTime),\r\n          };\r\n          const _chartData = await LGA_1_2(params);\r\n          setChartData(_chartData);\r\n        };\r\n        getLGA_1_2();\r\n      }\r\n    }, 5000);\r\n\r\n    return () => {\r\n      clearInterval(interval.current);\r\n      capture.removeEventListener(\"play\", playEvent, false);\r\n      capture.removeEventListener(\"pause\", playEvent, false);\r\n      capture.removeEventListener(\"ended\", endedEvent, false);\r\n    };\r\n  }, [play, playEvent, endedEvent, setChartData]);\r\n\r\n  const onFileConfirmCallback = useCallback(\r\n    (data) => {\r\n      const selectFile = data.files[0];\r\n      if (selectFile) {\r\n        const blob = URL.createObjectURL(selectFile);\r\n        setVideoSource({ src: blob, type: selectFile.type });\r\n      }\r\n\r\n      const getLGA_1_1 = async () => {\r\n        const params = {\r\n          source: data.value,\r\n          model: model,\r\n          options: {\r\n            opA: true,\r\n            opB: false,\r\n            opC: true,\r\n          },\r\n        };\r\n        await LGA_1_1(params);\r\n      };\r\n      getLGA_1_1();\r\n    },\r\n    [model]\r\n  );\r\n\r\n  const onChangeModel = useCallback((e) => {\r\n    setModel(e.target.value);\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <GameVodPopup onFileConfirmCallback={onFileConfirmCallback} />\r\n      <section className=\"bg_dark\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6 vod\">\r\n              <div className=\"m-2\">\r\n                <div className=\"embed-responsive embed-responsive-16by9\">\r\n                  <video ref={captureArea} autoPlay={true} controls={true} width=\"100%\" src={videoSource.src} type={videoSource.type} muted={true} />\r\n                </div>\r\n                <div className=\"control\">\r\n                  <button type=\"button\" className=\"btn btn_blue\" data-bs-toggle=\"modal\" data-bs-target=\"#gameVodPop\">\r\n                    게임영상선택\r\n                  </button>\r\n                  <div className=\"form-check\">\r\n                    <label>\r\n                      <input type=\"radio\" name=\"model\" defaultValue=\"Random Forest\" onChange={onChangeModel} checked={model === \"Random Forest\"} /> Random Forest\r\n                    </label>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <label>\r\n                      <input type=\"radio\" name=\"model\" defaultValue=\"Feed-Forward Neural Network\" onChange={onChangeModel} checked={model === \"Feed-Forward Neural Network\"} /> Feed-Forward Neural\r\n                      Network\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <div className=\"m-2\">\r\n                <h2 className=\"title\">⊙ 실시간 게임결과 예측</h2>\r\n                <div className=\"chart\">\r\n                  <WinPredictionChart />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section className=\"charts\">\r\n        <div className=\"container\">\r\n          <div className=\"row equal-cols\">\r\n            <div className=\"col-md-5 m-1\">\r\n              <div className=\"p-4 rounded bg border\">\r\n                <h3 className=\"title\">⊙ Total Gold</h3>\r\n                <div className=\"chart\">\r\n                  <GoldChart />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md m-1\">\r\n              <div className=\"p-4 rounded bg border\">\r\n                <div className=\"chartBox\" style={{ height: \"40%\" }}>\r\n                  <h3 className=\"title\">⊙ Total Champion Kill</h3>\r\n                  <div className=\"chart\">\r\n                    <ChampionKillChart />\r\n                  </div>\r\n                </div>\r\n                <hr className=\"line\" />\r\n                <div className=\"chartBox\" style={{ height: \"50%\" }}>\r\n                  <h3 className=\"title\">⊙ Total Tower Kill</h3>\r\n                  <div className=\"chart\">\r\n                    <TowerKillChart />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md m-1\">\r\n              <div className=\"p-4 rounded bg border\">\r\n                <div className=\"chartBox\">\r\n                  <h3 className=\"title\">⊙ Total Level</h3>\r\n                  <div className=\"chart\">\r\n                    <LevelChart />\r\n                  </div>\r\n                </div>\r\n                <hr className=\"line\" />\r\n                <div className=\"chartBox\">\r\n                  <h3 className=\"title\">⊙ Total Skill</h3>\r\n                  <div className=\"chart\">\r\n                    <SkillChart />\r\n                    <ImportanceFeaturesChart />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default P1;\r\n","import { useRef, useEffect, useState, useCallback, Fragment } from \"react\";\r\n\r\nimport { GameVodPopup, EventComponent, TimeLine } from \"../../components\";\r\nimport { IER_1_1, IER_1_2, IER_1_3 } from \"../../services\";\r\n\r\nconst P2 = () => {\r\n  const timeLineArea = useRef();\r\n  const captureArea = useRef();\r\n  const interval = useRef();\r\n  const [eventList, setEventList] = useState([]);\r\n  const [videoSource, setVideoSource] = useState({ src: null, type: \"\" });\r\n  const [play, setPlay] = useState(false);\r\n  const [model, setModel] = useState(\"Random Forest\");\r\n  const [eventData, setEventData] = useState({});\r\n\r\n  const playEvent = useCallback(\r\n    (e) => {\r\n      if (e.type === \"play\") {\r\n        setPlay(true);\r\n      } else if (e.type === \"pause\") {\r\n        setPlay(false);\r\n      }\r\n    },\r\n    [setPlay]\r\n  );\r\n\r\n  const endedEvent = useCallback(() => {\r\n    const getIER_1_3 = async () => {\r\n      await IER_1_3({});\r\n    };\r\n    getIER_1_3();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const capture = captureArea.current;\r\n    capture.addEventListener(\"play\", playEvent, false);\r\n    capture.addEventListener(\"pause\", playEvent, false);\r\n    capture.addEventListener(\"ended\", endedEvent, false);\r\n\r\n    interval.current = setInterval(() => {\r\n      const canvas = document.createElement(\"canvas\");\r\n      canvas.width = capture.offsetWidth * 2;\r\n      canvas.height = capture.offsetHeight * 2;\r\n\r\n      const ctx = canvas.getContext(\"2d\");\r\n      ctx.drawImage(capture, 0, 0, canvas.width, canvas.height);\r\n\r\n      const dataURL = canvas.toDataURL();\r\n      canvas.remove();\r\n\r\n      if (play) {\r\n        const getIER_1_2 = async () => {\r\n          const params = {\r\n            b64encoded: dataURL,\r\n            index: Math.floor(capture.currentTime),\r\n          };\r\n          const _eventData = await IER_1_2(params);\r\n          setEventList([...eventList, _eventData]);\r\n        };\r\n        getIER_1_2();\r\n      }\r\n    }, 5000);\r\n\r\n    return () => {\r\n      clearInterval(interval.current);\r\n      capture.removeEventListener(\"play\", playEvent, false);\r\n      capture.removeEventListener(\"pause\", playEvent, false);\r\n      capture.removeEventListener(\"ended\", endedEvent, false);\r\n    };\r\n  }, [play, playEvent, endedEvent, eventList, setEventList]);\r\n\r\n  useEffect(() => {\r\n    if (timeLineArea.current) {\r\n      timeLineArea.current.scrollTop = timeLineArea.current.scrollHeight;\r\n    }\r\n  }, [eventList]);\r\n\r\n  const onFileConfirmCallback = useCallback(\r\n    (data) => {\r\n      const selectFile = data.files[0];\r\n      if (selectFile) {\r\n        const blob = URL.createObjectURL(selectFile);\r\n        setVideoSource({ src: blob, type: selectFile.type });\r\n      }\r\n\r\n      const getIER_1_1 = async () => {\r\n        const params = {\r\n          source: data.value,\r\n          model: model,\r\n          options: {\r\n            opA: true,\r\n            opB: false,\r\n            opC: true,\r\n          },\r\n        };\r\n        await IER_1_1(params);\r\n      };\r\n      getIER_1_1();\r\n    },\r\n    [model]\r\n  );\r\n\r\n  const onChangeModel = useCallback((e) => {\r\n    setModel(e.target.value);\r\n  }, []);\r\n\r\n  const onTimeLineClickCallback = useCallback((data) => {\r\n    setEventData(data);\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <GameVodPopup onFileConfirmCallback={onFileConfirmCallback} />\r\n      <section>\r\n        <div className=\"container p-0\">\r\n          <div className=\"row equal-cols\">\r\n            <div className=\"col-md-6\">\r\n              <div className=\"row\" style={{ maxHeight: \"500px\" }}>\r\n                <div className=\"col-md-12 vod bg_dark\">\r\n                  <div className=\"p-2 mx-0\">\r\n                    <div className=\"embed-responsive embed-responsive-16by9\">\r\n                      <video ref={captureArea} autoPlay={true} controls={true} width=\"100%\" src={videoSource.src} type={videoSource.type} muted={true} />\r\n                    </div>\r\n                    <div className=\"control\">\r\n                      <button type=\"button\" className=\"btn btn_blue\" data-bs-toggle=\"modal\" data-bs-target=\"#gameVodPop\">\r\n                        게임영상선택\r\n                      </button>\r\n                      <div className=\"form-check\">\r\n                        <label>\r\n                          <input type=\"radio\" name=\"model\" defaultValue=\"Random Forest\" onChange={onChangeModel} checked={model === \"Random Forest\"} /> Random Forest\r\n                        </label>\r\n                        &nbsp;&nbsp;&nbsp;&nbsp;\r\n                        <label>\r\n                          <input type=\"radio\" name=\"model\" defaultValue=\"Feed-Forward Neural Network\" onChange={onChangeModel} checked={model === \"Feed-Forward Neural Network\"} /> Feed-Forward Neural\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12 px-0\">\r\n                  <div className=\"card mt-3 rounded bg border p-3\">\r\n                    <div className=\"card-body\">\r\n                      <div ref={timeLineArea} className=\"scrollBar\">\r\n                        <ul className=\"timeline\">\r\n                          <TimeLine eventList={eventList} onTimeLineClickCallback={onTimeLineClickCallback} />\r\n                        </ul>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div id=\"details\" className=\"col-md-6\">\r\n              <div className=\"m-3 p-4 rounded bg border\">\r\n                <h4 className=\"title\">⊙ 상세보기</h4>\r\n                <hr />\r\n                <EventComponent eventData={eventData} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default P2;\r\n","import { useRef, useEffect, useState, useCallback, Fragment } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { default as _ } from \"lodash\";\r\nimport { Slider } from \"@mui/material\";\r\nimport moment from \"moment\";\r\n\r\nimport FastRewindIcon from \"@mui/icons-material/FastRewind\";\r\nimport PlayArrowIcon from \"@mui/icons-material/PlayArrow\";\r\nimport PauseIcon from \"@mui/icons-material/Pause\";\r\nimport StopIcon from \"@mui/icons-material/Stop\";\r\nimport FastForwardIcon from \"@mui/icons-material/FastForward\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\n\r\nimport { loadImage } from \"../../commons\";\r\nimport { Footprints, Stats } from \"../../components\";\r\nimport { GPG_1_1, GPG_1_2, GPG_1_3 } from \"../../services\";\r\n\r\nconst P3 = () => {\r\n  const canvas = useRef();\r\n  const map = useRef();\r\n  const interval = useRef();\r\n  const { register, handleSubmit, setFocus } = useForm();\r\n  const [tierList, setTierList] = useState([{ name: \"None\", value: \"\" }]);\r\n  const [groupList, setGroupList] = useState([]);\r\n  const [profiles, setProfiles] = useState([]);\r\n  const [slideData, setSlideData] = useState([]);\r\n  const [sliderValue, setSliderValue] = useState(0);\r\n  const [selectedGroup, setSelectedGroup] = useState(\"\");\r\n  const [play, setPlay] = useState(false);\r\n\r\n  const versionList = [\r\n    { name: \"None\", value: \"\" },\r\n    { name: \"11.13\", value: 11.13 },\r\n    { name: \"11.14\", value: 11.14 },\r\n    { name: \"11.15\", value: 11.15 },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    setFocus(\"version\");\r\n  }, [setFocus]);\r\n\r\n  useEffect(() => {\r\n    if (play) {\r\n      const sliderIndex = _.findIndex(slideData, (data) => data.time === sliderValue);\r\n      interval.current = setInterval(() => {\r\n        if (sliderIndex < slideData.length - 1 && 0 < slideData.length) {\r\n          setSliderValue(slideData[sliderIndex + 1].time);\r\n        } else if (sliderIndex === slideData.length - 1) {\r\n          setPlay(false);\r\n        }\r\n      }, 1000);\r\n    } else {\r\n      clearInterval(interval.current);\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(interval.current);\r\n    };\r\n  }, [play, sliderValue, slideData]);\r\n\r\n  useEffect(() => {\r\n    if (selectedGroup !== \"\" && profiles.length > 0) {\r\n      const getGPG_1_3 = async () => {\r\n        const params = {\r\n          group: selectedGroup,\r\n          profiles: profiles,\r\n        };\r\n\r\n        const _footprintData = await GPG_1_3(params);\r\n        const representativeFootprint = _footprintData.representative_footprint;\r\n        const _slideData = [{ time: 0, x: 20, y: 490 }]; //시작좌표\r\n\r\n        Object.keys(representativeFootprint).forEach((key) => {\r\n          const width = 512;\r\n          const height = 512;\r\n          const xPos = representativeFootprint[key][0];\r\n          const yPos = representativeFootprint[key][1];\r\n\r\n          const drawX = width * xPos;\r\n          const drawY = height - height * yPos;\r\n          const time = Number(key.split(\"_\")[1]);\r\n\r\n          _slideData.push({ time: time, x: drawX, y: drawY });\r\n        });\r\n        setSlideData(_slideData);\r\n      };\r\n      getGPG_1_3();\r\n    }\r\n  }, [selectedGroup, profiles]);\r\n\r\n  useEffect(() => {\r\n    if (canvas.current) {\r\n      loadImage(\"img/map/map11.png\").then((img) => {\r\n        const ctx = canvas.current.getContext(\"2d\");\r\n        ctx.drawImage(img, 0, 0);\r\n\r\n        const sliderIndex = _.findIndex(slideData, (data) => data.time === sliderValue);\r\n        const viewProfiles = slideData.filter((_, index) => index < sliderIndex + 1);\r\n\r\n        viewProfiles.forEach((view, profileIndex) => {\r\n          if (profileIndex > 0) {\r\n            const opacity = 0.8 - 0.3 / profileIndex; //불투명 최대값 - 범위 / index\r\n            const transformColor = 255 / profileIndex; //RGB에서 G값 / index\r\n\r\n            ctx.beginPath();\r\n            ctx.moveTo(viewProfiles[profileIndex - 1].x, viewProfiles[profileIndex - 1].y);\r\n            ctx.lineTo(view.x, view.y);\r\n\r\n            ctx.strokeStyle = `rgb(235, ${transformColor}, 0, ${opacity})`;\r\n            ctx.lineWidth = 5;\r\n            ctx.stroke();\r\n          }\r\n        });\r\n\r\n        const base64 = canvas.current.toDataURL();\r\n        map.current.src = base64;\r\n      });\r\n    }\r\n  }, [sliderValue, slideData]);\r\n\r\n  const onSubmit = (form) => {\r\n    const getGPG_1_2 = async () => {\r\n      const _profileData = await GPG_1_2(form);\r\n\r\n      setGroupList(() => _profileData.index);\r\n      setSelectedGroup(_profileData.index[0]);\r\n      setProfiles(_profileData.profiles);\r\n    };\r\n    getGPG_1_2();\r\n  };\r\n\r\n  const onError = useCallback((errors, e) => {\r\n    const field = Object.keys(errors)[0];\r\n    alert(errors[field].message);\r\n  }, []);\r\n\r\n  const onPlayBoxClick = useCallback(\r\n    (value) => {\r\n      const sliderIndex = _.findIndex(slideData, (data) => data.time === sliderValue);\r\n      switch (value) {\r\n        case \"play\":\r\n          setPlay(true);\r\n          break;\r\n        case \"pause\":\r\n          setPlay(false);\r\n          break;\r\n        case \"stop\":\r\n          setPlay(false);\r\n          setSliderValue(0);\r\n          break;\r\n        case \"fastRewind\":\r\n          setPlay(false);\r\n          if (0 < sliderIndex && 0 < slideData.length) {\r\n            setSliderValue(slideData[sliderIndex - 1].time);\r\n          }\r\n          break;\r\n        case \"fastForward\":\r\n          setPlay(false);\r\n          if (sliderIndex < slideData.length - 1 && 0 < slideData.length) {\r\n            setSliderValue(slideData[sliderIndex + 1].time);\r\n          }\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    },\r\n    [slideData, sliderValue]\r\n  );\r\n\r\n  const onSliderChange = useCallback((e, value) => {\r\n    setSliderValue(value);\r\n  }, []);\r\n\r\n  const sliderValueFormatter = useCallback((value) => {\r\n    const minute = (value / 60) | 0;\r\n    const second = value % 60 | 0;\r\n\r\n    return moment(0).minute(minute).second(second).format(\"mm:ss\");\r\n  }, []);\r\n\r\n  const onGroupChange = useCallback((e) => {\r\n    setSelectedGroup(e.target.value);\r\n  }, []);\r\n\r\n  const onChangeVersion = useCallback((el) => {\r\n    const selected = el.target.value;\r\n\r\n    if (selected === \"\") {\r\n      setTierList([{ name: \"None\", value: \"\" }]);\r\n    } else {\r\n      const getGPG_1_1 = async () => {\r\n        const params = {\r\n          version: selected,\r\n        };\r\n        const _tierList = await GPG_1_1(params);\r\n        setTierList([\r\n          { name: \"None\", value: \"\" },\r\n          ..._tierList.tier.map((tier) => {\r\n            return { name: tier, value: tier };\r\n          }),\r\n        ]);\r\n      };\r\n      getGPG_1_1();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Fragment>\r\n      <section>\r\n        <div className=\"container p-0\">\r\n          <div className=\"row equal-cols\">\r\n            <div className=\"col-md-6\">\r\n              <div className=\"mapDataList m-3 p-4 rounded bg border\">\r\n                <div className=\"mapSelect\">\r\n                  <label htmlFor=\"groupSelect\">Group</label>\r\n                  <select className=\"form-select\" value={selectedGroup} disabled={groupList.length < 1} onChange={onGroupChange}>\r\n                    {groupList.map((group, index) => {\r\n                      return (\r\n                        <option key={index} value={group}>\r\n                          {group}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </select>\r\n                </div>\r\n                <div className=\"mapMove mt-3\">\r\n                  <img ref={map} src=\"img/map/map11.png\" alt=\"map\" />\r\n                  <canvas ref={canvas} width=\"512\" height=\"512\" hidden />\r\n                  <Slider\r\n                    step={20}\r\n                    value={sliderValue}\r\n                    aria-label=\"Default\"\r\n                    valueLabelDisplay=\"auto\"\r\n                    getAriaValueText={sliderValueFormatter}\r\n                    valueLabelFormat={sliderValueFormatter}\r\n                    onChange={onSliderChange}\r\n                    max={slideData.length > 0 ? slideData[slideData.length - 1].time : 0}\r\n                    disabled={groupList.length < 1}\r\n                  />\r\n                  <div className=\"play-box\">\r\n                    <IconButton aria-label=\"fastRewindIcon\" onClick={() => onPlayBoxClick(\"fastRewind\")} disabled={groupList.length < 1}>\r\n                      <FastRewindIcon color={groupList.length < 1 ? \"disabled\" : \"primary\"} />\r\n                    </IconButton>\r\n                    <IconButton aria-label=\"playIcon\" onClick={() => onPlayBoxClick(\"play\")} hidden={play} disabled={groupList.length < 1}>\r\n                      <PlayArrowIcon color={groupList.length < 1 ? \"disabled\" : \"primary\"} />\r\n                    </IconButton>\r\n                    <IconButton aria-label=\"pauseIcon\" onClick={() => onPlayBoxClick(\"pause\")} hidden={!play} disabled={groupList.length < 1}>\r\n                      <PauseIcon color={groupList.length < 1 ? \"disabled\" : \"primary\"} />\r\n                    </IconButton>\r\n                    <IconButton aria-label=\"stopIcon\" onClick={() => onPlayBoxClick(\"stop\")} disabled={groupList.length < 1}>\r\n                      <StopIcon color={groupList.length < 1 ? \"disabled\" : \"primary\"} />\r\n                    </IconButton>\r\n                    <IconButton aria-label=\"fastForwardIcon\" onClick={() => onPlayBoxClick(\"fastForward\")} disabled={groupList.length < 1}>\r\n                      <FastForwardIcon color={groupList.length < 1 ? \"disabled\" : \"primary\"} />\r\n                    </IconButton>\r\n                  </div>\r\n                </div>\r\n                <Stats profiles={profiles} selectedGroup={selectedGroup} />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <div className=\"mapSearch m-3 p-4 rounded bg border\">\r\n                <div className=\"searchForm\">\r\n                  <form>\r\n                    <div className=\"searchSelect\">\r\n                      <label htmlFor=\"versionSelect\">Version</label>\r\n                      <select className=\"form-select\" defaultValue={\"\"} {...register(\"version\", { required: \"버전을 선택해 주세요.\", onChange: onChangeVersion })}>\r\n                        {versionList.map((version, index) => {\r\n                          return (\r\n                            <option key={index} value={version.value}>\r\n                              {version.name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </select>\r\n                      <label htmlFor=\"tierSelect\">Tier</label>\r\n                      <select className=\"form-select\" defaultValue={\"\"} {...register(\"tier\", { required: \"티어를 선택해 주세요.\" })}>\r\n                        {tierList.map((tier, index) => {\r\n                          return (\r\n                            <option key={index} value={tier.value}>\r\n                              {tier.name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </select>\r\n                      <button type=\"button\" className=\"btn btn_blue2\" onClick={handleSubmit(onSubmit, onError)}>\r\n                        프로파일분류\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"searchRadio mt-3\">\r\n                      <div className=\"teamGroup\">\r\n                        <span className=\"\">Team</span>\r\n                        <input type=\"radio\" className=\"btn-check\" name=\"team\" id=\"option1\" {...register(\"team\", { required: true })} autoComplete=\"off\" defaultValue={\"blue\"} defaultChecked />\r\n                        <label className=\"btn btn-secondary\" htmlFor=\"option1\">\r\n                          Blue\r\n                        </label>\r\n                        <input type=\"radio\" className=\"btn-check\" name=\"team\" id=\"option2\" {...register(\"team\", { required: true })} autoComplete=\"off\" defaultValue={\"purple\"} />\r\n                        <label className=\"btn btn-secondary btn-right\" htmlFor=\"option2\">\r\n                          Purple\r\n                        </label>\r\n                      </div>\r\n                      <div className=\"positionGroup\">\r\n                        <span className=\"\">Position</span>\r\n                        <input\r\n                          type=\"radio\"\r\n                          className=\"btn-check\"\r\n                          name=\"position\"\r\n                          id=\"option3\"\r\n                          {...register(\"position\", { required: true })}\r\n                          autoComplete=\"off\"\r\n                          defaultValue={\"jungle\"}\r\n                          defaultChecked\r\n                        />\r\n                        <label className=\"btn btn-secondary\" htmlFor=\"option3\">\r\n                          Jungle\r\n                        </label>\r\n                        <input type=\"radio\" className=\"btn-check\" name=\"position\" id=\"option4\" {...register(\"position\", { required: true })} autoComplete=\"off\" defaultValue={\"middle\"} />\r\n                        <label className=\"btn btn-secondary btn-right\" htmlFor=\"option4\">\r\n                          Middle\r\n                        </label>\r\n                      </div>\r\n                      <div className=\"featureGroup\">\r\n                        <span className=\"\">Feature</span>\r\n                        <input\r\n                          type=\"radio\"\r\n                          className=\"btn-check\"\r\n                          name=\"feature\"\r\n                          id=\"option5\"\r\n                          {...register(\"feature\", { required: true })}\r\n                          autoComplete=\"off\"\r\n                          defaultValue={\"win_rate\"}\r\n                          defaultChecked\r\n                        />\r\n                        <label className=\"btn btn-secondary\" htmlFor=\"option5\">\r\n                          Win rate\r\n                        </label>\r\n                        <input type=\"radio\" className=\"btn-check\" name=\"feature\" id=\"option6\" {...register(\"feature\", { required: true })} autoComplete=\"off\" defaultValue={\"kda\"} />\r\n                        <label className=\"btn btn-secondary btn-right\" htmlFor=\"option6\">\r\n                          K/D/A\r\n                        </label>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n                <hr />\r\n                <div className=\"resultMap\">\r\n                  <Footprints profiles={profiles} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default P3;\r\n","import { Fragment } from \"react\";\r\n\r\nconst Test = () => {\r\n  return (\r\n    <Fragment>\r\n      <section className=\"bg_dark\">\r\n        <div className=\"container\">\r\n          <button type=\"button\" className=\"btn btn_blue\">\r\n            게임영상선택\r\n          </button>\r\n        </div>\r\n      </section>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Test;\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { P1, P2, P3, Test } from \"./pages\";\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\">\r\n        <Redirect to=\"/test\" />\r\n      </Route>\r\n      <Route exact path=\"/p1\" component={P1} />\r\n      <Route exact path=\"/p2\" component={P2} />\r\n      <Route exact path=\"/p3\" component={P3} />\r\n      <Route exact path=\"/test\" component={Test} />\r\n    </Switch>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nimport App from \"./App\";\r\nimport { default as Routes } from \"./Routes\";\r\nimport { RecoilRoot } from \"recoil\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter basename={\"esports\"}>\r\n      <RecoilRoot>\r\n        <App />\r\n        <Routes />\r\n      </RecoilRoot>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}